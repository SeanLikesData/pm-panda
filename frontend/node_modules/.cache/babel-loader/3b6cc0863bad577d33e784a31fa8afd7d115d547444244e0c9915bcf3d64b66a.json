{"ast":null,"code":"var _jsxFileName = \"/Volumes/t9/github/pmhelper/frontend/src/components/NewProjectModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { X, FileText, ChevronRight } from 'lucide-react';\nimport { apiService } from '../services/apiService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n_c = Modal;\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  width: 90%;\n  max-width: 600px;\n  max-height: 80vh;\n  overflow-y: auto;\n`;\n_c2 = ModalContent;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n_c3 = Header;\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #1a1d23;\n`;\n_c4 = Title;\nconst CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  color: #6b7280;\n  \n  &:hover {\n    color: #1a1d23;\n  }\n`;\n_c5 = CloseButton;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  font-size: 1rem;\n  margin-bottom: 1.5rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c6 = Input;\nconst TemplateGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n_c7 = TemplateGrid;\nconst TemplateCard = styled.div`\n  border: 2px solid ${props => props.selected ? '#667eea' : '#e0e0e0'};\n  border-radius: 8px;\n  padding: 1rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  background: ${props => props.selected ? '#f0f4ff' : 'white'};\n  \n  &:hover {\n    border-color: #667eea;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  }\n`;\n_c8 = TemplateCard;\nconst TemplateTitle = styled.div`\n  font-weight: 600;\n  color: #1a1d23;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c9 = TemplateTitle;\nconst TemplateDescription = styled.div`\n  font-size: 0.85rem;\n  color: #6b7280;\n  line-height: 1.4;\n`;\n_c0 = TemplateDescription;\nconst TemplateBadge = styled.span`\n  font-size: 0.7rem;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-weight: 600;\n  background: ${props => {\n  switch (props.type) {\n    case 'quick':\n      return '#10b981';\n    case 'full':\n      return '#6b7280';\n    case 'mvp':\n      return '#f59e0b';\n    default:\n      return '#667eea';\n  }\n}};\n  color: white;\n`;\n_c1 = TemplateBadge;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: flex-end;\n`;\n_c10 = ButtonGroup;\nconst Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 8px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    transform: translateY(-1px);\n  }\n`;\nconst PrimaryButton = styled(Button)`\n  background: #667eea;\n  color: white;\n  border: none;\n  \n  &:hover {\n    background: #5a67d8;\n  }\n  \n  &:disabled {\n    background: #cbd5e0;\n    cursor: not-allowed;\n  }\n`;\n_c11 = PrimaryButton;\nconst SecondaryButton = styled(Button)`\n  background: white;\n  color: #6b7280;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f9fafb;\n  }\n`;\n_c12 = SecondaryButton;\nconst templates = [{\n  id: 'lean',\n  name: 'Lean PRD',\n  description: 'Minimalist approach with problem, solution, and metrics',\n  badge: 'quick',\n  sections: 4\n}, {\n  id: 'agile',\n  name: 'Agile/Scrum PRD',\n  description: 'User stories with acceptance criteria',\n  sections: 6\n}, {\n  id: 'startup',\n  name: 'Startup PRD',\n  description: 'Hypothesis-driven for rapid iteration',\n  badge: 'mvp',\n  sections: 6\n}, {\n  id: 'amazon',\n  name: 'Amazon Working Backwards',\n  description: 'Start with press release and FAQ',\n  sections: 5\n}, {\n  id: 'technical',\n  name: 'Technical PRD',\n  description: 'Engineering-focused specifications',\n  sections: 7\n}, {\n  id: 'enterprise',\n  name: 'Enterprise PRD',\n  description: 'Comprehensive documentation for large projects',\n  badge: 'full',\n  sections: 8\n}];\nfunction NewProjectModal({\n  isOpen,\n  onClose,\n  onCreate\n}) {\n  _s();\n  const [projectName, setProjectName] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('lean');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleCreate = async () => {\n    if (!projectName.trim()) {\n      toast.error('Please enter a project name');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Get the template\n      const template = await apiService.getPRDTemplate(selectedTemplate);\n\n      // Create the project with the template\n      const newProject = {\n        id: Date.now(),\n        title: projectName,\n        status: 'draft',\n        templateType: selectedTemplate,\n        createdAt: new Date().toISOString(),\n        lastModified: new Date().toISOString(),\n        prd: template,\n        documents: []\n      };\n      onCreate(newProject);\n      toast.success(`Project \"${projectName}\" created with ${selectedTemplate} template`);\n      onClose();\n    } catch (error) {\n      toast.error('Failed to create project');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Create New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Enter project name...\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.1rem',\n            fontWeight: '600',\n            marginBottom: '0.75rem'\n          },\n          children: \"Choose a PRD Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.9rem',\n            color: '#6b7280',\n            marginBottom: '1rem'\n          },\n          children: \"Select a template that best fits your project style\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TemplateGrid, {\n        children: templates.map(template => /*#__PURE__*/_jsxDEV(TemplateCard, {\n          selected: selectedTemplate === template.id,\n          onClick: () => setSelectedTemplate(template.id),\n          children: [/*#__PURE__*/_jsxDEV(TemplateTitle, {\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), template.name, template.badge && /*#__PURE__*/_jsxDEV(TemplateBadge, {\n              type: template.badge,\n              children: template.badge.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TemplateDescription, {\n            children: [template.description, /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '4px',\n                fontSize: '0.8rem'\n              },\n              children: [template.sections, \" sections\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, template.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(SecondaryButton, {\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          onClick: handleCreate,\n          disabled: !projectName.trim() || isLoading,\n          children: isLoading ? 'Creating...' : 'Create Project'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n_s(NewProjectModal, \"PMkCDs6kHcEqGdLQ5SefZ/t75Fc=\");\n_c13 = NewProjectModal;\nexport default NewProjectModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"CloseButton\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"TemplateGrid\");\n$RefreshReg$(_c8, \"TemplateCard\");\n$RefreshReg$(_c9, \"TemplateTitle\");\n$RefreshReg$(_c0, \"TemplateDescription\");\n$RefreshReg$(_c1, \"TemplateBadge\");\n$RefreshReg$(_c10, \"ButtonGroup\");\n$RefreshReg$(_c11, \"PrimaryButton\");\n$RefreshReg$(_c12, \"SecondaryButton\");\n$RefreshReg$(_c13, \"NewProjectModal\");","map":{"version":3,"names":["React","useState","useEffect","styled","X","FileText","ChevronRight","apiService","toast","jsxDEV","_jsxDEV","Modal","div","_c","ModalContent","_c2","Header","_c3","Title","h2","_c4","CloseButton","button","_c5","Input","input","_c6","TemplateGrid","_c7","TemplateCard","props","selected","_c8","TemplateTitle","_c9","TemplateDescription","_c0","TemplateBadge","span","type","_c1","ButtonGroup","_c10","Button","PrimaryButton","_c11","SecondaryButton","_c12","templates","id","name","description","badge","sections","NewProjectModal","isOpen","onClose","onCreate","_s","projectName","setProjectName","selectedTemplate","setSelectedTemplate","isLoading","setIsLoading","handleCreate","trim","error","template","getPRDTemplate","newProject","Date","now","title","status","templateType","createdAt","toISOString","lastModified","prd","documents","success","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","size","placeholder","value","onChange","target","autoFocus","style","marginBottom","fontSize","fontWeight","color","map","toUpperCase","marginTop","disabled","_c13","$RefreshReg$"],"sources":["/Volumes/t9/github/pmhelper/frontend/src/components/NewProjectModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { X, FileText, ChevronRight } from 'lucide-react';\nimport { apiService } from '../services/apiService';\nimport toast from 'react-hot-toast';\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  width: 90%;\n  max-width: 600px;\n  max-height: 80vh;\n  overflow-y: auto;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #1a1d23;\n`;\n\nconst CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  color: #6b7280;\n  \n  &:hover {\n    color: #1a1d23;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  font-size: 1rem;\n  margin-bottom: 1.5rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst TemplateGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst TemplateCard = styled.div`\n  border: 2px solid ${props => props.selected ? '#667eea' : '#e0e0e0'};\n  border-radius: 8px;\n  padding: 1rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  background: ${props => props.selected ? '#f0f4ff' : 'white'};\n  \n  &:hover {\n    border-color: #667eea;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  }\n`;\n\nconst TemplateTitle = styled.div`\n  font-weight: 600;\n  color: #1a1d23;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst TemplateDescription = styled.div`\n  font-size: 0.85rem;\n  color: #6b7280;\n  line-height: 1.4;\n`;\n\nconst TemplateBadge = styled.span`\n  font-size: 0.7rem;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-weight: 600;\n  background: ${props => {\n    switch(props.type) {\n      case 'quick': return '#10b981';\n      case 'full': return '#6b7280';\n      case 'mvp': return '#f59e0b';\n      default: return '#667eea';\n    }\n  }};\n  color: white;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: flex-end;\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 8px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    transform: translateY(-1px);\n  }\n`;\n\nconst PrimaryButton = styled(Button)`\n  background: #667eea;\n  color: white;\n  border: none;\n  \n  &:hover {\n    background: #5a67d8;\n  }\n  \n  &:disabled {\n    background: #cbd5e0;\n    cursor: not-allowed;\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: white;\n  color: #6b7280;\n  border: 1px solid #e0e0e0;\n  \n  &:hover {\n    background: #f9fafb;\n  }\n`;\n\nconst templates = [\n  {\n    id: 'lean',\n    name: 'Lean PRD',\n    description: 'Minimalist approach with problem, solution, and metrics',\n    badge: 'quick',\n    sections: 4\n  },\n  {\n    id: 'agile',\n    name: 'Agile/Scrum PRD',\n    description: 'User stories with acceptance criteria',\n    sections: 6\n  },\n  {\n    id: 'startup',\n    name: 'Startup PRD',\n    description: 'Hypothesis-driven for rapid iteration',\n    badge: 'mvp',\n    sections: 6\n  },\n  {\n    id: 'amazon',\n    name: 'Amazon Working Backwards',\n    description: 'Start with press release and FAQ',\n    sections: 5\n  },\n  {\n    id: 'technical',\n    name: 'Technical PRD',\n    description: 'Engineering-focused specifications',\n    sections: 7\n  },\n  {\n    id: 'enterprise',\n    name: 'Enterprise PRD',\n    description: 'Comprehensive documentation for large projects',\n    badge: 'full',\n    sections: 8\n  }\n];\n\nfunction NewProjectModal({ isOpen, onClose, onCreate }) {\n  const [projectName, setProjectName] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('lean');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleCreate = async () => {\n    if (!projectName.trim()) {\n      toast.error('Please enter a project name');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      // Get the template\n      const template = await apiService.getPRDTemplate(selectedTemplate);\n      \n      // Create the project with the template\n      const newProject = {\n        id: Date.now(),\n        title: projectName,\n        status: 'draft',\n        templateType: selectedTemplate,\n        createdAt: new Date().toISOString(),\n        lastModified: new Date().toISOString(),\n        prd: template,\n        documents: []\n      };\n      \n      onCreate(newProject);\n      toast.success(`Project \"${projectName}\" created with ${selectedTemplate} template`);\n      onClose();\n    } catch (error) {\n      toast.error('Failed to create project');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal onClick={onClose}>\n      <ModalContent onClick={(e) => e.stopPropagation()}>\n        <Header>\n          <Title>Create New Project</Title>\n          <CloseButton onClick={onClose}>\n            <X size={24} />\n          </CloseButton>\n        </Header>\n\n        <Input\n          type=\"text\"\n          placeholder=\"Enter project name...\"\n          value={projectName}\n          onChange={(e) => setProjectName(e.target.value)}\n          autoFocus\n        />\n\n        <div style={{ marginBottom: '1rem' }}>\n          <h3 style={{ fontSize: '1.1rem', fontWeight: '600', marginBottom: '0.75rem' }}>\n            Choose a PRD Template\n          </h3>\n          <p style={{ fontSize: '0.9rem', color: '#6b7280', marginBottom: '1rem' }}>\n            Select a template that best fits your project style\n          </p>\n        </div>\n\n        <TemplateGrid>\n          {templates.map(template => (\n            <TemplateCard\n              key={template.id}\n              selected={selectedTemplate === template.id}\n              onClick={() => setSelectedTemplate(template.id)}\n            >\n              <TemplateTitle>\n                <FileText size={16} />\n                {template.name}\n                {template.badge && (\n                  <TemplateBadge type={template.badge}>\n                    {template.badge.toUpperCase()}\n                  </TemplateBadge>\n                )}\n              </TemplateTitle>\n              <TemplateDescription>\n                {template.description}\n                <div style={{ marginTop: '4px', fontSize: '0.8rem' }}>\n                  {template.sections} sections\n                </div>\n              </TemplateDescription>\n            </TemplateCard>\n          ))}\n        </TemplateGrid>\n\n        <ButtonGroup>\n          <SecondaryButton onClick={onClose}>\n            Cancel\n          </SecondaryButton>\n          <PrimaryButton \n            onClick={handleCreate}\n            disabled={!projectName.trim() || isLoading}\n          >\n            {isLoading ? 'Creating...' : 'Create Project'}\n          </PrimaryButton>\n        </ButtonGroup>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default NewProjectModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}