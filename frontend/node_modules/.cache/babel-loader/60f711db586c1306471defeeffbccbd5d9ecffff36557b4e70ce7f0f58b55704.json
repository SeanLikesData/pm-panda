{"ast":null,"code":"var _jsxFileName = \"/Volumes/t9/github/pmhelper/frontend/src/components/PRDEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Save, Download, RefreshCw, ChevronRight, ChevronDown, Sparkles } from 'lucide-react';\nimport { useStore } from '../store/appStore';\nimport { ollamaService } from '../services/ollamaService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c = Container;\nconst Toolbar = styled.div`\n  padding: 12px 16px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n_c2 = Toolbar;\nconst ToolButton = styled.button`\n  padding: 8px 16px;\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 0.9rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f0f0f0;\n    border-color: #667eea;\n  }\n`;\n_c3 = ToolButton;\nconst Content = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 1.5rem;\n`;\n_c4 = Content;\nconst TitleInput = styled.input`\n  width: 100%;\n  font-size: 1.5rem;\n  font-weight: 600;\n  border: none;\n  background: transparent;\n  margin-bottom: 1.5rem;\n  padding: 8px 0;\n  border-bottom: 2px solid transparent;\n  transition: border-color 0.2s;\n\n  &:focus {\n    outline: none;\n    border-bottom-color: #667eea;\n  }\n`;\n_c5 = TitleInput;\nconst Section = styled.div`\n  margin-bottom: 2rem;\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n`;\n_c6 = Section;\nconst SectionHeader = styled.div`\n  padding: 12px 16px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  user-select: none;\n\n  &:hover {\n    background: #e9ecef;\n  }\n`;\n_c7 = SectionHeader;\nconst SectionTitle = styled.div`\n  font-weight: 600;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c8 = SectionTitle;\nconst SectionContent = styled.div`\n  padding: 16px;\n`;\n_c9 = SectionContent;\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 150px;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-family: inherit;\n  font-size: 0.95rem;\n  line-height: 1.5;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c0 = TextArea;\nconst PromptsList = styled.div`\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid #e0e0e0;\n`;\n_c1 = PromptsList;\nconst PromptItem = styled.div`\n  padding: 8px 12px;\n  background: #f0f4ff;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  font-size: 0.9rem;\n  color: #667eea;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e0e8ff;\n    transform: translateX(4px);\n  }\n`;\n_c10 = PromptItem;\nconst SuggestButton = styled.button`\n  padding: 6px 12px;\n  background: #667eea;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.85rem;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: #5a67d8;\n  }\n`;\n_c11 = SuggestButton;\nconst StatusBar = styled.div`\n  padding: 8px 16px;\n  background: #f8f9fa;\n  border-top: 1px solid #e0e0e0;\n  font-size: 0.85rem;\n  color: #666;\n  display: flex;\n  justify-content: space-between;\n`;\n_c12 = StatusBar;\nconst MissingAlert = styled.div`\n  margin: 1rem 1.5rem;\n  padding: 12px 16px;\n  background: #fff3cd;\n  border: 1px solid #ffc107;\n  border-radius: 8px;\n  color: #856404;\n  font-size: 0.9rem;\n`;\n_c13 = MissingAlert;\nconst RequiredBadge = styled.span`\n  margin-left: 8px;\n  padding: 2px 6px;\n  background: #dc3545;\n  color: white;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n`;\n_c14 = RequiredBadge;\nconst CompleteBadge = styled.span`\n  margin-left: 8px;\n  padding: 2px 6px;\n  background: #28a745;\n  color: white;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n`;\n_c15 = CompleteBadge;\nfunction PRDEditor() {\n  _s();\n  const {\n    currentPRD,\n    setCurrentPRD,\n    updatePRDSection,\n    documents\n  } = useStore();\n  const [expandedSections, setExpandedSections] = useState(['overview', 'objectives']);\n  const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState({});\n  if (!currentPRD) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading PRD template...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n  const toggleSection = sectionKey => {\n    setExpandedSections(prev => prev.includes(sectionKey) ? prev.filter(k => k !== sectionKey) : [...prev, sectionKey]);\n  };\n  const handleSectionChange = (sectionKey, value) => {\n    updatePRDSection(sectionKey, value);\n  };\n  const generateSuggestions = async sectionKey => {\n    setIsGeneratingSuggestions(prev => ({\n      ...prev,\n      [sectionKey]: true\n    }));\n    try {\n      const section = currentPRD.sections[sectionKey];\n      const suggestions = await ollamaService.generatePRDSuggestions(section, section.content);\n\n      // Add suggestions to the section content\n      const updatedContent = section.content + '\\n\\n### AI Suggestions:\\n' + suggestions;\n      updatePRDSection(sectionKey, updatedContent);\n      toast.success('Suggestions added to section');\n    } catch (error) {\n      toast.error('Failed to generate suggestions');\n    } finally {\n      setIsGeneratingSuggestions(prev => ({\n        ...prev,\n        [sectionKey]: false\n      }));\n    }\n  };\n  const handlePromptClick = (sectionKey, prompt) => {\n    const section = currentPRD.sections[sectionKey];\n    const currentContent = section.content || '';\n    const updatedContent = currentContent + (currentContent ? '\\n\\n' : '') + `**${prompt}**\\n[Your answer here]`;\n    updatePRDSection(sectionKey, updatedContent);\n  };\n  const savePRD = () => {\n    const prdData = JSON.stringify(currentPRD, null, 2);\n    const blob = new Blob([prdData], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `PRD_${currentPRD.title.replace(/\\s+/g, '_')}_${Date.now()}.json`;\n    a.click();\n    toast.success('PRD saved successfully');\n  };\n  const exportMarkdown = () => {\n    let markdown = `# ${currentPRD.title}\\n\\n`;\n    Object.entries(currentPRD.sections).forEach(([key, section]) => {\n      markdown += `## ${section.title}\\n\\n`;\n      markdown += section.content || '_To be defined_';\n      markdown += '\\n\\n';\n    });\n    const blob = new Blob([markdown], {\n      type: 'text/markdown'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `PRD_${currentPRD.title.replace(/\\s+/g, '_')}_${Date.now()}.md`;\n    a.click();\n    toast.success('PRD exported as Markdown');\n  };\n  const analyzePRD = async () => {\n    try {\n      const analysis = await ollamaService.analyzePRD(currentPRD);\n      toast.success('Analysis complete - check chat for details');\n      // You could also display this in a modal or separate view\n    } catch (error) {\n      toast.error('Failed to analyze PRD');\n    }\n  };\n  const wordCount = Object.values(currentPRD.sections).reduce((acc, section) => {\n    var _section$content;\n    return acc + (((_section$content = section.content) === null || _section$content === void 0 ? void 0 : _section$content.split(/\\s+/).length) || 0);\n  }, 0);\n  const completedSections = Object.values(currentPRD.sections).filter(section => section.content && section.content.length > 50).length;\n\n  // Check for missing required sections\n  const missingSections = Object.entries(currentPRD.sections).filter(([key, section]) => section.required && (!section.content || section.content.length < 20)).map(([key, section]) => section.title);\n  const isSectionComplete = section => {\n    return section.content && section.content.length > 20;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(ToolButton, {\n        onClick: savePRD,\n        children: [/*#__PURE__*/_jsxDEV(Save, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolButton, {\n        onClick: exportMarkdown,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), \"Export\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolButton, {\n        onClick: analyzePRD,\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), \"Analyze\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n        value: currentPRD.title || '',\n        onChange: e => setCurrentPRD({\n          ...currentPRD,\n          title: e.target.value\n        }),\n        placeholder: \"PRD Title...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), missingSections.length > 0 && /*#__PURE__*/_jsxDEV(MissingAlert, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u26A0\\uFE0F Missing Required Sections:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 59\n        }, this), missingSections.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            marginTop: '8px',\n            display: 'block'\n          },\n          children: \"These sections are required for a complete PRD. Please fill them in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), Object.entries(currentPRD.sections).map(([sectionKey, section]) => /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          onClick: () => toggleSection(sectionKey),\n          children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n            children: [expandedSections.includes(sectionKey) ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), section.title, section.required && !isSectionComplete(section) && /*#__PURE__*/_jsxDEV(RequiredBadge, {\n              children: \"Required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 69\n            }, this), isSectionComplete(section) && /*#__PURE__*/_jsxDEV(CompleteBadge, {\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SuggestButton, {\n            onClick: e => {\n              e.stopPropagation();\n              generateSuggestions(sectionKey);\n            },\n            disabled: isGeneratingSuggestions[sectionKey],\n            children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), isGeneratingSuggestions[sectionKey] ? 'Generating...' : 'Suggest']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), expandedSections.includes(sectionKey) && /*#__PURE__*/_jsxDEV(SectionContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            value: section.content || '',\n            onChange: e => handleSectionChange(sectionKey, e.target.value),\n            placeholder: `Enter ${section.title.toLowerCase()} details...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), section.prompts && section.prompts.length > 0 && /*#__PURE__*/_jsxDEV(PromptsList, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.85rem',\n                color: '#999',\n                marginBottom: '8px'\n              },\n              children: \"Click a prompt to add it:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this), section.prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(PromptItem, {\n              onClick: () => handlePromptClick(sectionKey, prompt),\n              children: prompt\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this)]\n      }, sectionKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [completedSections, \"/\", Object.keys(currentPRD.sections).length, \" sections \\u2022 \", wordCount, \" words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [documents.length, \" context documents\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n_s(PRDEditor, \"CfA7wU5nOh+KT+1TpXdENwLqUPU=\", false, function () {\n  return [useStore];\n});\n_c16 = PRDEditor;\nexport default PRDEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Toolbar\");\n$RefreshReg$(_c3, \"ToolButton\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"TitleInput\");\n$RefreshReg$(_c6, \"Section\");\n$RefreshReg$(_c7, \"SectionHeader\");\n$RefreshReg$(_c8, \"SectionTitle\");\n$RefreshReg$(_c9, \"SectionContent\");\n$RefreshReg$(_c0, \"TextArea\");\n$RefreshReg$(_c1, \"PromptsList\");\n$RefreshReg$(_c10, \"PromptItem\");\n$RefreshReg$(_c11, \"SuggestButton\");\n$RefreshReg$(_c12, \"StatusBar\");\n$RefreshReg$(_c13, \"MissingAlert\");\n$RefreshReg$(_c14, \"RequiredBadge\");\n$RefreshReg$(_c15, \"CompleteBadge\");\n$RefreshReg$(_c16, \"PRDEditor\");","map":{"version":3,"names":["React","useState","styled","Save","Download","RefreshCw","ChevronRight","ChevronDown","Sparkles","useStore","ollamaService","toast","jsxDEV","_jsxDEV","Container","div","_c","Toolbar","_c2","ToolButton","button","_c3","Content","_c4","TitleInput","input","_c5","Section","_c6","SectionHeader","_c7","SectionTitle","_c8","SectionContent","_c9","TextArea","textarea","_c0","PromptsList","_c1","PromptItem","_c10","SuggestButton","_c11","StatusBar","_c12","MissingAlert","_c13","RequiredBadge","span","_c14","CompleteBadge","_c15","PRDEditor","_s","currentPRD","setCurrentPRD","updatePRDSection","documents","expandedSections","setExpandedSections","isGeneratingSuggestions","setIsGeneratingSuggestions","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleSection","sectionKey","prev","includes","filter","k","handleSectionChange","value","generateSuggestions","section","sections","suggestions","generatePRDSuggestions","content","updatedContent","success","error","handlePromptClick","prompt","currentContent","savePRD","prdData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","title","replace","Date","now","click","exportMarkdown","markdown","Object","entries","forEach","key","analyzePRD","analysis","wordCount","values","reduce","acc","_section$content","split","length","completedSections","missingSections","required","map","isSectionComplete","onClick","size","onChange","e","target","placeholder","join","style","marginTop","display","stopPropagation","disabled","toLowerCase","prompts","fontSize","color","marginBottom","index","keys","_c16","$RefreshReg$"],"sources":["/Volumes/t9/github/pmhelper/frontend/src/components/PRDEditor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Save, Download, RefreshCw, ChevronRight, ChevronDown, Sparkles } from 'lucide-react';\nimport { useStore } from '../store/appStore';\nimport { ollamaService } from '../services/ollamaService';\nimport toast from 'react-hot-toast';\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Toolbar = styled.div`\n  padding: 12px 16px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst ToolButton = styled.button`\n  padding: 8px 16px;\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 0.9rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f0f0f0;\n    border-color: #667eea;\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 1.5rem;\n`;\n\nconst TitleInput = styled.input`\n  width: 100%;\n  font-size: 1.5rem;\n  font-weight: 600;\n  border: none;\n  background: transparent;\n  margin-bottom: 1.5rem;\n  padding: 8px 0;\n  border-bottom: 2px solid transparent;\n  transition: border-color 0.2s;\n\n  &:focus {\n    outline: none;\n    border-bottom-color: #667eea;\n  }\n`;\n\nconst Section = styled.div`\n  margin-bottom: 2rem;\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n`;\n\nconst SectionHeader = styled.div`\n  padding: 12px 16px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  user-select: none;\n\n  &:hover {\n    background: #e9ecef;\n  }\n`;\n\nconst SectionTitle = styled.div`\n  font-weight: 600;\n  color: #333;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SectionContent = styled.div`\n  padding: 16px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 150px;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-family: inherit;\n  font-size: 0.95rem;\n  line-height: 1.5;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst PromptsList = styled.div`\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid #e0e0e0;\n`;\n\nconst PromptItem = styled.div`\n  padding: 8px 12px;\n  background: #f0f4ff;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  font-size: 0.9rem;\n  color: #667eea;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e0e8ff;\n    transform: translateX(4px);\n  }\n`;\n\nconst SuggestButton = styled.button`\n  padding: 6px 12px;\n  background: #667eea;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.85rem;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  transition: background 0.2s;\n\n  &:hover {\n    background: #5a67d8;\n  }\n`;\n\nconst StatusBar = styled.div`\n  padding: 8px 16px;\n  background: #f8f9fa;\n  border-top: 1px solid #e0e0e0;\n  font-size: 0.85rem;\n  color: #666;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst MissingAlert = styled.div`\n  margin: 1rem 1.5rem;\n  padding: 12px 16px;\n  background: #fff3cd;\n  border: 1px solid #ffc107;\n  border-radius: 8px;\n  color: #856404;\n  font-size: 0.9rem;\n`;\n\nconst RequiredBadge = styled.span`\n  margin-left: 8px;\n  padding: 2px 6px;\n  background: #dc3545;\n  color: white;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n`;\n\nconst CompleteBadge = styled.span`\n  margin-left: 8px;\n  padding: 2px 6px;\n  background: #28a745;\n  color: white;\n  border-radius: 4px;\n  font-size: 0.75rem;\n  font-weight: 600;\n`;\n\nfunction PRDEditor() {\n  const { currentPRD, setCurrentPRD, updatePRDSection, documents } = useStore();\n  const [expandedSections, setExpandedSections] = useState(['overview', 'objectives']);\n  const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState({});\n\n  if (!currentPRD) {\n    return (\n      <Container>\n        <Content>\n          <p>Loading PRD template...</p>\n        </Content>\n      </Container>\n    );\n  }\n\n  const toggleSection = (sectionKey) => {\n    setExpandedSections(prev =>\n      prev.includes(sectionKey)\n        ? prev.filter(k => k !== sectionKey)\n        : [...prev, sectionKey]\n    );\n  };\n\n  const handleSectionChange = (sectionKey, value) => {\n    updatePRDSection(sectionKey, value);\n  };\n\n  const generateSuggestions = async (sectionKey) => {\n    setIsGeneratingSuggestions(prev => ({ ...prev, [sectionKey]: true }));\n    \n    try {\n      const section = currentPRD.sections[sectionKey];\n      const suggestions = await ollamaService.generatePRDSuggestions(\n        section,\n        section.content\n      );\n      \n      // Add suggestions to the section content\n      const updatedContent = section.content + '\\n\\n### AI Suggestions:\\n' + suggestions;\n      updatePRDSection(sectionKey, updatedContent);\n      \n      toast.success('Suggestions added to section');\n    } catch (error) {\n      toast.error('Failed to generate suggestions');\n    } finally {\n      setIsGeneratingSuggestions(prev => ({ ...prev, [sectionKey]: false }));\n    }\n  };\n\n  const handlePromptClick = (sectionKey, prompt) => {\n    const section = currentPRD.sections[sectionKey];\n    const currentContent = section.content || '';\n    const updatedContent = currentContent + \n      (currentContent ? '\\n\\n' : '') + \n      `**${prompt}**\\n[Your answer here]`;\n    updatePRDSection(sectionKey, updatedContent);\n  };\n\n  const savePRD = () => {\n    const prdData = JSON.stringify(currentPRD, null, 2);\n    const blob = new Blob([prdData], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `PRD_${currentPRD.title.replace(/\\s+/g, '_')}_${Date.now()}.json`;\n    a.click();\n    toast.success('PRD saved successfully');\n  };\n\n  const exportMarkdown = () => {\n    let markdown = `# ${currentPRD.title}\\n\\n`;\n    \n    Object.entries(currentPRD.sections).forEach(([key, section]) => {\n      markdown += `## ${section.title}\\n\\n`;\n      markdown += section.content || '_To be defined_';\n      markdown += '\\n\\n';\n    });\n\n    const blob = new Blob([markdown], { type: 'text/markdown' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `PRD_${currentPRD.title.replace(/\\s+/g, '_')}_${Date.now()}.md`;\n    a.click();\n    toast.success('PRD exported as Markdown');\n  };\n\n  const analyzePRD = async () => {\n    try {\n      const analysis = await ollamaService.analyzePRD(currentPRD);\n      toast.success('Analysis complete - check chat for details');\n      // You could also display this in a modal or separate view\n    } catch (error) {\n      toast.error('Failed to analyze PRD');\n    }\n  };\n\n  const wordCount = Object.values(currentPRD.sections)\n    .reduce((acc, section) => acc + (section.content?.split(/\\s+/).length || 0), 0);\n\n  const completedSections = Object.values(currentPRD.sections)\n    .filter(section => section.content && section.content.length > 50).length;\n  \n  // Check for missing required sections\n  const missingSections = Object.entries(currentPRD.sections)\n    .filter(([key, section]) => section.required && (!section.content || section.content.length < 20))\n    .map(([key, section]) => section.title);\n  \n  const isSectionComplete = (section) => {\n    return section.content && section.content.length > 20;\n  };\n\n  return (\n    <Container>\n      <Toolbar>\n        <ToolButton onClick={savePRD}>\n          <Save size={16} />\n          Save\n        </ToolButton>\n        <ToolButton onClick={exportMarkdown}>\n          <Download size={16} />\n          Export\n        </ToolButton>\n        <ToolButton onClick={analyzePRD}>\n          <RefreshCw size={16} />\n          Analyze\n        </ToolButton>\n      </Toolbar>\n\n      <Content>\n        <TitleInput\n          value={currentPRD.title || ''}\n          onChange={(e) => setCurrentPRD({ ...currentPRD, title: e.target.value })}\n          placeholder=\"PRD Title...\"\n        />\n\n        {missingSections.length > 0 && (\n          <MissingAlert>\n            <strong>⚠️ Missing Required Sections:</strong><br />\n            {missingSections.join(', ')}\n            <br />\n            <small style={{ marginTop: '8px', display: 'block' }}>\n              These sections are required for a complete PRD. Please fill them in.\n            </small>\n          </MissingAlert>\n        )}\n\n        {Object.entries(currentPRD.sections).map(([sectionKey, section]) => (\n          <Section key={sectionKey}>\n            <SectionHeader onClick={() => toggleSection(sectionKey)}>\n              <SectionTitle>\n                {expandedSections.includes(sectionKey) ? \n                  <ChevronDown size={16} /> : \n                  <ChevronRight size={16} />\n                }\n                {section.title}\n                {section.required && !isSectionComplete(section) && <RequiredBadge>Required</RequiredBadge>}\n                {isSectionComplete(section) && <CompleteBadge>✓</CompleteBadge>}\n              </SectionTitle>\n              <SuggestButton\n                onClick={(e) => {\n                  e.stopPropagation();\n                  generateSuggestions(sectionKey);\n                }}\n                disabled={isGeneratingSuggestions[sectionKey]}\n              >\n                <Sparkles size={14} />\n                {isGeneratingSuggestions[sectionKey] ? 'Generating...' : 'Suggest'}\n              </SuggestButton>\n            </SectionHeader>\n\n            {expandedSections.includes(sectionKey) && (\n              <SectionContent>\n                <TextArea\n                  value={section.content || ''}\n                  onChange={(e) => handleSectionChange(sectionKey, e.target.value)}\n                  placeholder={`Enter ${section.title.toLowerCase()} details...`}\n                />\n                \n                {section.prompts && section.prompts.length > 0 && (\n                  <PromptsList>\n                    <div style={{ fontSize: '0.85rem', color: '#999', marginBottom: '8px' }}>\n                      Click a prompt to add it:\n                    </div>\n                    {section.prompts.map((prompt, index) => (\n                      <PromptItem \n                        key={index}\n                        onClick={() => handlePromptClick(sectionKey, prompt)}\n                      >\n                        {prompt}\n                      </PromptItem>\n                    ))}\n                  </PromptsList>\n                )}\n              </SectionContent>\n            )}\n          </Section>\n        ))}\n      </Content>\n\n      <StatusBar>\n        <span>\n          {completedSections}/{Object.keys(currentPRD.sections).length} sections • {wordCount} words\n        </span>\n        <span>\n          {documents.length} context documents\n        </span>\n      </StatusBar>\n    </Container>\n  );\n}\n\nexport default PRDEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}